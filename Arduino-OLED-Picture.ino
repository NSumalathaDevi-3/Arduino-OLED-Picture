#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_RESET    -1
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);
// 16x16 binary image (example: a heart shape)
const uint8_t myBitmap[] PROGMEM = {
 // 'final-image', 128x64px
0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0x0b, 0x07, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0x03, 0x87, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0x0b, 0xc1, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xf0, 0x7f, 0xff, 0xff, 0xfe, 0x1f, 0xff, 0xf0, 0x0f, 0xf8, 0xff, 0xfe, 0x9f, 0xff, 0xff, 0xff, 
  0xe0, 0x0d, 0xff, 0xff, 0xe6, 0x0f, 0xff, 0xe0, 0x39, 0xf0, 0x7f, 0xfe, 0x07, 0xff, 0xff, 0xfe, 
  0x00, 0x01, 0xff, 0xfe, 0x01, 0x07, 0xfd, 0x00, 0x00, 0x00, 0x2d, 0xf4, 0x03, 0xff, 0xff, 0xfc, 
  0x00, 0x00, 0x7f, 0xf0, 0x00, 0x03, 0xe0, 0x80, 0x00, 0x00, 0x10, 0x02, 0x01, 0xff, 0xf8, 0x00, 
  0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0xa0, 0x04, 0x00, 0x00, 0x08, 0x00, 0x02, 0x1f, 0xc0, 0x00, 
  0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x0e, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x04, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x43, 0x80, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xbf, 0xff, 0xff, 0xd5, 0xfe, 0xf2, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0xff, 0xff, 0xe0, 0x00, 
  0x00, 0x10, 0x00, 0x60, 0x44, 0x35, 0x7f, 0xe0, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xfd, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0x98, 
  0x00, 0x00, 0xff, 0x8f, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xf8, 
  0x00, 0x1f, 0x25, 0xfb, 0xff, 0xff, 0xff, 0xfc, 0x40, 0x02, 0x00, 0x07, 0xff, 0xff, 0xfc, 0x00, 
  0x00, 0x00, 0x02, 0x4f, 0xfc, 0x98, 0xc7, 0xfe, 0xc0, 0x03, 0x00, 0x07, 0xff, 0xff, 0xf0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x01, 0x00, 0x07, 0xf0, 0x37, 0xc0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x40, 0x01, 0x00, 0x07, 0xf8, 0x08, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x7c, 0x98, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x60, 0x00, 0x00, 
  0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf2, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xfc, 0xe8, 0x00, 
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x07, 0xbf, 0xff, 0xff, 0xfc, 
  0x7f, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xf0, 
  0x0f, 0xff, 0xff, 0xf5, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x18, 0x0f, 0xff, 0xff, 0xff, 0x00, 
  0x03, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x20, 0x01, 0xff, 0xff, 0xfe, 0x00, 
  0x01, 0xbf, 0xf7, 0xbf, 0xff, 0xff, 0xff, 0x62, 0x00, 0x00, 0x78, 0x00, 0xff, 0xfb, 0x30, 0x00, 
  0x00, 0x03, 0xff, 0xdf, 0x07, 0xff, 0xdf, 0xdf, 0x00, 0x00, 0x78, 0x0d, 0xff, 0xf8, 0x60, 0x00, 
  0x00, 0x03, 0x56, 0xdf, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0xf8, 0x0f, 0xff, 0xff, 0xe0, 0x00, 
  0x00, 0x00, 0xef, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0xfc, 0x0f, 0xff, 0xff, 0xf0, 0x00, 
  0x00, 0x01, 0x3f, 0xff, 0xff, 0xff, 0x92, 0x41, 0x00, 0x00, 0xfc, 0x0f, 0xff, 0xff, 0xf0, 0x00, 
  0x00, 0x00, 0x01, 0xff, 0xd3, 0xc0, 0x00, 0x00, 0x00, 0x20, 0xfe, 0x0f, 0xff, 0xff, 0xe0, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0xd3, 0xc7, 0x00, 0x00, 0x00, 0x20, 0xfe, 0x0f, 0xff, 0xff, 0x00, 0x00, 
  0x00, 0x00, 0x10, 0x03, 0x90, 0xe7, 0x24, 0x00, 0x00, 0x00, 0x7e, 0x0f, 0xff, 0xf8, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x21, 0x3c, 0x22, 0x01, 0xa0, 0x00, 0x20, 0x7e, 0x0f, 0xff, 0xe0, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x03, 0x42, 0x7f, 0xfa, 0x80, 0x00, 0x7e, 0x0f, 0xfe, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x01, 0xcb, 0xd8, 0x38, 0xbf, 0x80, 0x00, 0x7e, 0x07, 0xc0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x3d, 0x78, 0x00, 0x00, 0x5e, 0x04, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00, 0x00, 0x4e, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// Array of all bitmaps for convenience. (Total bytes used to store images in PROGMEM = 1040)
void setup() {
  Serial.begin(9600);
  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println(F("SSD1306 allocation failed"));
    for (;;);
  }
  display.clearDisplay();
  // Draw bitmap at (x, y), width = 16, height = 16
  display.drawBitmap(0, 0, myBitmap, 128 , 64, WHITE);
  display.display();
}
void loop() {
  // Nothing here
}
